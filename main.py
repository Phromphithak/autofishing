import base64
import pydirectinput as pg
import pyautogui
import PIL

# รูป png to byte
#Qpng = "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"
#Rpng = "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"
#Spng = "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"
#Wpng = "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"


def k1():
    k1 = pyautogui.locateOnScreen('./Q.png',grayscale=False,confidence=0.7)
    if k1 == None:
        print('Could not locate Q') 
    else:
        pg.keyDown('q')
        pg.keyUp('q')
        print(f'pressing Q',{k1})
        
def k2():
    k2 = pyautogui.locateOnScreen('./W.png',grayscale=False,confidence=0.7)
    if k2 == None:
        print('Could not locate W')
    else:
        pg.keyDown('w')
        pg.keyUp('w')
        print(f'pressing W',{k2})
        
def k3():
    k3 = pyautogui.locateOnScreen('./S.png',grayscale=False,confidence=0.7)
    if k3 == None:
        print('Could not locate S')
    else:
        pg.keyDown('s')
        pg.keyUp('s')
        print(f'pressing S',{k3})

def k4():
    k4 = pyautogui.locateOnScreen('./R.png',grayscale=False,confidence=0.7)
    if k4 == None:
        print('Could not locate R')
    else:
        pg.keyDown('r')
        pg.keyUp('r')
        print(f'pressing R',{k4})
